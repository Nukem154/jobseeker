spring.datasource.url=jdbc:postgresql://localhost:5432/jobseeker
spring.datasource.username=postgres
spring.datasource.password=postgres

robotaua.graphql.getPublishedVacanciesList=query getPublishedVacanciesList($filter: PublishedVacanciesFilterInput!, $pagination: PublishedVacanciesPaginationInput!) {  publishedVacancies(filter: $filter, pagination: $pagination) {    totalCount    items {      ...PublishedVacanciesItem      __typename    }    __typename  }}fragment PublishedVacanciesItem on Vacancy {  id  schedules {    id    __typename  }  title  description  sortDateText  hot  designBannerUrl  badges {    name    __typename  }  salary {    amount    comment    amountFrom    amountTo    __typename  }  company {    id    logoUrl    name    __typename  }  city {    id    name    __typename  }  showProfile  seekerFavorite {    isFavorite    __typename  }  seekerDisliked {    isDisliked    __typename  }  formApplyCustomUrl  anonymous  isActive  publicationType  __typename}
robotaua.graphql.getPublishedVacancy=query getPublishedVacancy($id: ID!, $trackView: Boolean) {  publishedVacancy(id: $id, trackView: $trackView) {    ...PublishedVacancyPage    __typename  }}fragment PublishedVacancyPage on Vacancy {  id  title  anonymous  city {    id    name    __typename  }  company {    ...CompanyInfo    __typename  }  salary {    comment    amount    amountFrom    amountTo    __typename  }  sortDateText  sortDate  address {    name    district {      name      __typename    }    metro {      name      __typename    }    longitude    latitude    __typename  }  badges {    ...Badge    __typename  }  description  fullDescription  contacts {    name    phones    photo    socials    __typename  }  seekerDisliked {    isDisliked    __typename  }  seekerFavorite {    isFavorite    __typename  }  seekerApplication {    isApplied    lastTimeAppliedAt    __typename  }  isActive  hasDesign  designType  design {    ...HeaderInfo    id    backgroundHtml    footerInfo {      ...DesignFooterInfo      __typename    }    __typename  }  branch {    id    name    __typename  }  schedules {    id    name    __typename  }  hot  media {    ...MediaObject    __typename  }  ...KeyTagGroups  supportApplicationWithoutResume  formApplyCustomUrl  publicationType  languageQuestions {    language {      id      __typename    }    __typename  }  candidatesScreening {    questionnaire {      id      __typename    }    isEnabled    __typename  }  experienceQuestions {    id    __typename  }  status  __typename}fragment CompanyInfo on Company {  id  logoUrl  name  isVerified  companyUrl  miniProfile {    ...CompanyMiniProfileInfo    __typename  }  __typename}fragment CompanyMiniProfileInfo on CompanyMiniProfile {  isEnabled  description  images  years  benefits {    name    id    __typename  }  staffSize {    id    name    __typename  }  __typename}fragment Badge on PublishedVacancyBadge {  name  id  __typename}fragment HeaderInfo on VacancyDesign {  headerInfo {    ...DesignHeaderInfo    __typename  }  __typename}fragment DesignHeaderInfo on VacancyDesignHeader {  mediaItems {    type    url    videoCoverImageUrl    __typename  }  videoPlayButtonImageUrl  __typename}fragment DesignFooterInfo on VacancyDesignFooter {  imageUrl  __typename}fragment MediaObject on VacancyMedia {  url  description  type  __typename}fragment KeyTagGroups on Vacancy {  keyTagGroups {    name    id    __typename  }  __typename}